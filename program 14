
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_FILES 10
#define MAX_FILENAME_LENGTH 50

// Structure to represent a file
typedef struct {
    char filename[MAX_FILENAME_LENGTH];
} File;

// Array to store files in the single-level directory
File directory[MAX_FILES];
int fileCount = 0;

// Function declarations
void displayFiles();
void addFile(char *filename);
void deleteFile(char *filename);

int main() {
    int choice;
    char filename[MAX_FILENAME_LENGTH];

    do {
        printf("1. Display Files\n");
        printf("2. Add File\n");
        printf("3. Delete File\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                displayFiles();
                break;
            case 2:
                printf("Enter the filename to add: ");
                scanf("%s", filename);
                addFile(filename);
                break;
            case 3:
                printf("Enter the filename to delete: ");
                scanf("%s", filename);
                deleteFile(filename);
                break;
            case 4:
                printf("Exiting the program.\n");
                break;
            default:
                printf("Invalid choice. Please enter a valid option.\n");
        }

    } while (choice != 4);

    return 0;
}

void displayFiles() {
    if (fileCount == 0) {
        printf("No files in the directory.\n");
    } else {
        printf("Files in the directory:\n");
        for (int i = 0; i < fileCount; i++) {
            printf("%s\n", directory[i].filename);
        }
    }
}

void addFile(char *filename) {
    if (fileCount < MAX_FILES) {
        strcpy(directory[fileCount].filename, filename);
        fileCount++;
        printf("File '%s' added successfully.\n", filename);
    } else {
        printf("Cannot add file. Directory is full.\n");
    }
}

void deleteFile(char *filename) {
    int found = 0;
    for (int i = 0; i < fileCount; i++) {
        if (strcmp(directory[i].filename, filename) == 0) {
            // Shift files to fill the gap
            for (int j = i; j < fileCount - 1; j++) {
                strcpy(directory[j].filename, directory[j + 1].filename);
            }
            fileCount--;
            found = 1;
            printf("File '%s' deleted successfully.\n", filename);
            break;
        }
    }

    if (!found) {
        printf("File '%s' not found.\n", filename);
    }
}
